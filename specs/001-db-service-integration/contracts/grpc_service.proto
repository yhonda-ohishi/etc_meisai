// Protocol Buffer definition for ETC明細 gRPC service integration
syntax = "proto3";

package etc_service;
option go_package = "github.com/etc_meisai/contracts/pb";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

// ETC明細 gRPC service definition
service ETCService {
    // Basic CRUD operations
    rpc CreateETCMeisai(CreateETCMeisaiRequest) returns (ETCMeisaiResponse);
    rpc GetETCMeisai(GetETCMeisaiRequest) returns (ETCMeisaiResponse);
    rpc UpdateETCMeisai(UpdateETCMeisaiRequest) returns (ETCMeisaiResponse);
    rpc DeleteETCMeisai(DeleteETCMeisaiRequest) returns (google.protobuf.Empty);
    rpc ListETCMeisai(ListETCMeisaiRequest) returns (ListETCMeisaiResponse);

    // Bulk operations
    rpc BulkCreateETCMeisai(BulkCreateETCMeisaiRequest) returns (BulkCreateETCMeisaiResponse);
    rpc BulkUpdateETCMeisai(BulkUpdateETCMeisaiRequest) returns (BulkUpdateETCMeisaiResponse);

    // Query operations
    rpc GetETCMeisaiByDateRange(GetETCMeisaiByDateRangeRequest) returns (ListETCMeisaiResponse);
    rpc GetETCMeisaiByHash(GetETCMeisaiByHashRequest) returns (ETCMeisaiResponse);
    rpc GetUnmappedETCMeisai(GetUnmappedETCMeisaiRequest) returns (ListETCMeisaiResponse);

    // Hash operations
    rpc CheckDuplicatesByHash(CheckDuplicatesByHashRequest) returns (CheckDuplicatesByHashResponse);
    rpc GenerateHash(GenerateHashRequest) returns (GenerateHashResponse);

    // Aggregation operations
    rpc GetETCSummary(GetETCSummaryRequest) returns (ETCSummaryResponse);
    rpc GetMonthlyStats(GetMonthlyStatsRequest) returns (MonthlyStatsResponse);
}

// Mapping service for ETC-DTako relationships
service ETCMappingService {
    // Basic CRUD
    rpc CreateMapping(CreateMappingRequest) returns (MappingResponse);
    rpc GetMapping(GetMappingRequest) returns (MappingResponse);
    rpc UpdateMapping(UpdateMappingRequest) returns (MappingResponse);
    rpc DeleteMapping(DeleteMappingRequest) returns (google.protobuf.Empty);
    rpc ListMappings(ListMappingsRequest) returns (ListMappingsResponse);

    // Auto-matching
    rpc FindPotentialMatches(FindPotentialMatchesRequest) returns (FindPotentialMatchesResponse);
    rpc CreateAutoMappings(CreateAutoMappingsRequest) returns (CreateAutoMappingsResponse);
}

// Import service for batch processing
service ETCImportService {
    // Batch management
    rpc CreateImportBatch(CreateImportBatchRequest) returns (ImportBatchResponse);
    rpc GetImportBatch(GetImportBatchRequest) returns (ImportBatchResponse);
    rpc UpdateBatchStatus(UpdateBatchStatusRequest) returns (ImportBatchResponse);

    // Import operations
    rpc ProcessCSVData(ProcessCSVDataRequest) returns (ProcessCSVDataResponse);
    rpc GetImportProgress(GetImportProgressRequest) returns (ImportProgressResponse);
    rpc CancelImport(CancelImportRequest) returns (google.protobuf.Empty);
}

// Message definitions

// ETCMeisai core message
message ETCMeisai {
    int64 id = 1;
    google.protobuf.Timestamp use_date = 2;
    string use_time = 3;
    string entry_ic = 4;
    string exit_ic = 5;
    int32 amount = 6;
    string car_number = 7;
    string etc_number = 8;
    string hash = 9;
    google.protobuf.Timestamp created_at = 10;
    google.protobuf.Timestamp updated_at = 11;
}

// Request/Response messages for ETCService
message CreateETCMeisaiRequest {
    ETCMeisai etc_meisai = 1;
}

message GetETCMeisaiRequest {
    int64 id = 1;
}

message UpdateETCMeisaiRequest {
    ETCMeisai etc_meisai = 1;
}

message DeleteETCMeisaiRequest {
    int64 id = 1;
}

message ETCMeisaiResponse {
    ETCMeisai etc_meisai = 1;
}

message ListETCMeisaiRequest {
    int32 limit = 1;
    int32 offset = 2;
    google.protobuf.Timestamp start_date = 3;
    google.protobuf.Timestamp end_date = 4;
    string etc_number = 5;
    string entry_ic = 6;
    string exit_ic = 7;
    string sort_by = 8;
    string sort_order = 9;
}

message ListETCMeisaiResponse {
    repeated ETCMeisai etc_meisai_list = 1;
    int64 total_count = 2;
}

message BulkCreateETCMeisaiRequest {
    repeated ETCMeisai etc_meisai_list = 1;
    int64 batch_id = 2;
}

message BulkCreateETCMeisaiResponse {
    int32 created_count = 1;
    int32 error_count = 2;
    repeated string error_messages = 3;
}

message BulkUpdateETCMeisaiRequest {
    repeated ETCMeisai etc_meisai_list = 1;
}

message BulkUpdateETCMeisaiResponse {
    int32 updated_count = 1;
    int32 error_count = 2;
    repeated string error_messages = 3;
}

message GetETCMeisaiByDateRangeRequest {
    google.protobuf.Timestamp start_date = 1;
    google.protobuf.Timestamp end_date = 2;
}

message GetETCMeisaiByHashRequest {
    string hash = 1;
}

message GetUnmappedETCMeisaiRequest {
    google.protobuf.Timestamp start_date = 1;
    google.protobuf.Timestamp end_date = 2;
}

message CheckDuplicatesByHashRequest {
    repeated string hashes = 1;
}

message CheckDuplicatesByHashResponse {
    map<string, bool> duplicates = 1;
}

message GenerateHashRequest {
    ETCMeisai etc_meisai = 1;
}

message GenerateHashResponse {
    string hash = 1;
}

message GetETCSummaryRequest {
    google.protobuf.Timestamp start_date = 1;
    google.protobuf.Timestamp end_date = 2;
}

message ETCSummaryResponse {
    int64 total_amount = 1;
    int64 total_count = 2;
    google.protobuf.Timestamp start_date = 3;
    google.protobuf.Timestamp end_date = 4;
    map<string, ETCNumberSummary> by_etc_number = 5;
    map<string, ETCMonthlySummary> by_month = 6;
}

message ETCNumberSummary {
    string etc_number = 1;
    int64 total_amount = 2;
    int64 total_count = 3;
}

message ETCMonthlySummary {
    int32 year = 1;
    int32 month = 2;
    int64 total_amount = 3;
    int64 total_count = 4;
}

message GetMonthlyStatsRequest {
    int32 year = 1;
    int32 month = 2;
}

message MonthlyStatsResponse {
    int32 year = 1;
    int32 month = 2;
    int64 total_amount = 3;
    int64 total_count = 4;
    map<int32, ETCDailySummary> daily_breakdown = 5;
    repeated ETCRouteSummary top_routes = 6;
}

message ETCDailySummary {
    int32 day = 1;
    int64 amount = 2;
    int64 count = 3;
}

message ETCRouteSummary {
    string entry_ic = 1;
    string exit_ic = 2;
    int64 count = 3;
    int64 total_amount = 4;
    int64 avg_amount = 5;
}

// Mapping messages
message ETCMeisaiMapping {
    int64 id = 1;
    int64 etc_meisai_id = 2;
    string dtako_row_id = 3;
    string mapping_type = 4;
    float confidence = 5;
    google.protobuf.Timestamp created_at = 6;
    google.protobuf.Timestamp updated_at = 7;
}

message CreateMappingRequest {
    ETCMeisaiMapping mapping = 1;
}

message GetMappingRequest {
    int64 id = 1;
}

message UpdateMappingRequest {
    ETCMeisaiMapping mapping = 1;
}

message DeleteMappingRequest {
    int64 id = 1;
}

message MappingResponse {
    ETCMeisaiMapping mapping = 1;
}

message ListMappingsRequest {
    int32 limit = 1;
    int32 offset = 2;
    int64 etc_meisai_id = 3;
    string dtako_row_id = 4;
    string mapping_type = 5;
    float min_confidence = 6;
}

message ListMappingsResponse {
    repeated ETCMeisaiMapping mappings = 1;
    int64 total_count = 2;
}

message FindPotentialMatchesRequest {
    int64 etc_meisai_id = 1;
    float threshold = 2;
}

message PotentialMatch {
    string dtako_row_id = 1;
    float confidence = 2;
    repeated string match_reasons = 3;
    map<string, string> dtako_data = 4;
}

message FindPotentialMatchesResponse {
    repeated PotentialMatch matches = 1;
}

message CreateAutoMappingsRequest {
    google.protobuf.Timestamp start_date = 1;
    google.protobuf.Timestamp end_date = 2;
    float min_confidence = 3;
}

message CreateAutoMappingsResponse {
    int32 created_count = 1;
    int32 low_confidence_count = 2;
    repeated ETCMeisaiMapping created_mappings = 3;
}

// Import messages
message ETCImportBatch {
    int64 id = 1;
    string batch_hash = 2;
    string file_name = 3;
    int32 total_records = 4;
    int32 processed_count = 5;
    int32 error_count = 6;
    string status = 7;
    google.protobuf.Timestamp start_time = 8;
    google.protobuf.Timestamp complete_time = 9;
    google.protobuf.Timestamp created_at = 10;
}

message CreateImportBatchRequest {
    string file_name = 1;
    int32 total_records = 2;
    string batch_hash = 3;
}

message GetImportBatchRequest {
    int64 id = 1;
}

message UpdateBatchStatusRequest {
    int64 id = 1;
    string status = 2;
    int32 processed_count = 3;
    int32 error_count = 4;
}

message ImportBatchResponse {
    ETCImportBatch batch = 1;
}

message ProcessCSVDataRequest {
    int64 batch_id = 1;
    repeated ETCMeisai records = 2;
    bool validate_duplicates = 3;
}

message ProcessCSVDataResponse {
    int32 processed_count = 1;
    int32 created_count = 2;
    int32 duplicate_count = 3;
    int32 error_count = 4;
    repeated string error_messages = 5;
}

message GetImportProgressRequest {
    int64 batch_id = 1;
}

message ImportProgressResponse {
    ETCImportBatch batch = 1;
    float progress_percentage = 2;
    string current_status = 3;
    repeated string recent_errors = 4;
}

message CancelImportRequest {
    int64 batch_id = 1;
}