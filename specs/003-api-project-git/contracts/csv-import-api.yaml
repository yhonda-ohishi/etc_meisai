openapi: 3.0.0
info:
  title: ETC明細 CSV Import API
  description: CSV file import endpoints for ETC toll data with production database integration
  version: 1.0.0

paths:
  /api/etc/import/csv:
    post:
      summary: Import ETC明細 CSV file
      description: Upload and import ETC toll records from CSV file to local database
      operationId: importETCCSV
      tags:
        - CSV Import
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
                  description: CSV file containing ETC toll records
                options:
                  $ref: '#/components/schemas/ImportOptions'
      responses:
        200:
          description: CSV import completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSVImportResponse'
        400:
          description: Invalid CSV format or validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        413:
          description: File size exceeds limit (10MB)
        500:
          description: Internal server error

  /api/etc/import/csv/status/{sessionId}:
    get:
      summary: Get CSV import session status
      description: Check the status of a CSV import session
      operationId: getImportStatus
      tags:
        - CSV Import
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Import session status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportSessionStatus'
        404:
          description: Session not found

  /api/etc/matching/execute:
    post:
      summary: Execute ETC-Dtako matching
      description: Run matching between ETC records and production dtako_rows using etc_num
      operationId: executeMatching
      tags:
        - Matching
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MatchingRequest'
      responses:
        202:
          description: Matching job accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchingJobResponse'
        400:
          description: Invalid request parameters

  /api/etc/matching/results/{jobId}:
    get:
      summary: Get matching job results
      description: Retrieve results of a matching job
      operationId: getMatchingResults
      tags:
        - Matching
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Matching results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchingResults'
        404:
          description: Job not found

  /api/etc/matching/stats:
    get:
      summary: Get matching statistics
      description: Get overall matching statistics and performance metrics
      operationId: getMatchingStats
      tags:
        - Matching
      parameters:
        - name: startDate
          in: query
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          schema:
            type: string
            format: date
      responses:
        200:
          description: Matching statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchingStats'

components:
  schemas:
    ImportOptions:
      type: object
      properties:
        skipDuplicates:
          type: boolean
          default: true
          description: Skip records that already exist in database
        autoMatch:
          type: boolean
          default: false
          description: Automatically run matching after import
        batchSize:
          type: integer
          default: 1000
          description: Number of records to process per batch
        encoding:
          type: string
          enum: [auto, utf-8, shift-jis]
          default: auto
          description: CSV file encoding

    CSVImportResponse:
      type: object
      required:
        - sessionId
        - status
        - summary
      properties:
        sessionId:
          type: string
          format: uuid
          description: Import session identifier
        status:
          type: string
          enum: [processing, completed, failed]
        summary:
          $ref: '#/components/schemas/ImportSummary'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ImportError'

    ImportSummary:
      type: object
      required:
        - totalRows
        - importedRows
        - skippedRows
        - errorRows
      properties:
        totalRows:
          type: integer
          description: Total rows in CSV file
        importedRows:
          type: integer
          description: Successfully imported rows
        skippedRows:
          type: integer
          description: Skipped duplicate rows
        errorRows:
          type: integer
          description: Rows with errors

    ImportError:
      type: object
      required:
        - rowNumber
        - message
      properties:
        rowNumber:
          type: integer
        fieldName:
          type: string
        errorType:
          type: string
          enum: [validation, parsing, duplicate]
        message:
          type: string

    ImportSessionStatus:
      type: object
      required:
        - sessionId
        - status
        - progress
      properties:
        sessionId:
          type: string
          format: uuid
        fileName:
          type: string
        fileSize:
          type: integer
        status:
          type: string
          enum: [processing, completed, failed]
        progress:
          type: number
          format: float
          minimum: 0
          maximum: 100
        summary:
          $ref: '#/components/schemas/ImportSummary'
        startedAt:
          type: string
          format: date-time
        completedAt:
          type: string
          format: date-time

    MatchingRequest:
      type: object
      required:
        - startDate
        - endDate
      properties:
        startDate:
          type: string
          format: date
          description: Start date for matching range
        endDate:
          type: string
          format: date
          description: End date for matching range
        etcNumbers:
          type: array
          items:
            type: string
          description: Specific ETC card numbers to match (optional)
        matchingMode:
          type: string
          enum: [auto_all, auto_exact, manual_review]
          default: auto_all
          description: Matching strategy to use
        batchSize:
          type: integer
          default: 1000
        parallelWorkers:
          type: integer
          default: 4
          maximum: 10

    MatchingJobResponse:
      type: object
      required:
        - jobId
        - status
        - message
      properties:
        jobId:
          type: integer
          format: int64
        status:
          type: string
          enum: [pending, running, completed, failed, cancelled]
        message:
          type: string
        estimatedRecords:
          type: integer

    MatchingResults:
      type: object
      required:
        - jobId
        - status
        - results
      properties:
        jobId:
          type: integer
          format: int64
        status:
          type: string
          enum: [pending, running, completed, failed, cancelled]
        totalRecords:
          type: integer
        processedRecords:
          type: integer
        matchedRecords:
          type: integer
        unmatchedRecords:
          type: integer
        averageConfidence:
          type: number
          format: float
        results:
          type: array
          items:
            $ref: '#/components/schemas/MatchingResult'
        startedAt:
          type: string
          format: date-time
        completedAt:
          type: string
          format: date-time

    MatchingResult:
      type: object
      required:
        - etcMeisaiId
        - matchingStatus
      properties:
        etcMeisaiId:
          type: integer
          format: int64
        etcNumber:
          type: string
          description: ETC card number (etc_num)
        dtakoRowId:
          type: string
          description: Matched dtako_row ID from production DB
        matchingGrade:
          type: string
          enum: [auto_exact, auto_partial, auto_candidate, manual, unmatched]
        confidenceScore:
          type: number
          format: float
          minimum: 0
          maximum: 1
        matchingFactors:
          type: object
          properties:
            etcNumMatch:
              type: boolean
            dateMatch:
              type: boolean
            timeOverlap:
              type: number
              format: float
            amountDiff:
              type: integer

    MatchingStats:
      type: object
      required:
        - period
        - totalEtcRecords
        - totalDtakoRows
        - matchingRate
      properties:
        period:
          type: object
          properties:
            startDate:
              type: string
              format: date
            endDate:
              type: string
              format: date
        totalEtcRecords:
          type: integer
        totalDtakoRows:
          type: integer
          description: Count from production DB
        matchedRecords:
          type: integer
        unmatchedRecords:
          type: integer
        matchingRate:
          type: number
          format: float
          description: Percentage of successful matches
        gradeDistribution:
          type: object
          properties:
            auto_exact:
              type: integer
            auto_partial:
              type: integer
            auto_candidate:
              type: integer
            manual:
              type: integer
        averageConfidence:
          type: number
          format: float
        performanceMetrics:
          type: object
          properties:
            averageMatchingTime:
              type: number
              format: float
              description: Average time per record in milliseconds
            databaseQueries:
              type: integer
              description: Total production DB queries

    ErrorResponse:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
        message:
          type: string
        details:
          type: array
          items:
            type: string