# Test Execution Contract
openapi: 3.0.0
info:
  title: Test Execution API
  version: 1.0.0
  description: Contract for test execution and coverage reporting

paths:
  /test/run:
    post:
      summary: Execute test suite
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                packages:
                  type: array
                  items:
                    type: string
                  description: Packages to test (empty = all)
                coverage:
                  type: boolean
                  description: Generate coverage report
                parallel:
                  type: boolean
                  description: Run tests in parallel
                verbose:
                  type: boolean
                  description: Verbose output
                timeout:
                  type: string
                  description: Test timeout (e.g., "30s")
      responses:
        '200':
          description: Test execution completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestResults'
        '500':
          description: Test execution failed

  /test/coverage:
    get:
      summary: Get coverage report
      parameters:
        - name: package
          in: query
          schema:
            type: string
          description: Specific package (empty = all)
        - name: format
          in: query
          schema:
            type: string
            enum: [json, html, text]
          description: Report format
      responses:
        '200':
          description: Coverage report
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoverageReport'

  /test/generate:
    post:
      summary: Generate tests for uncovered code
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                targetFile:
                  type: string
                  description: Source file to generate tests for
                testType:
                  type: string
                  enum: [unit, integration, benchmark]
                tableDriven:
                  type: boolean
                  description: Use table-driven pattern
      responses:
        '201':
          description: Tests generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneratedTests'

components:
  schemas:
    TestResults:
      type: object
      properties:
        totalTests:
          type: integer
        passed:
          type: integer
        failed:
          type: integer
        skipped:
          type: integer
        duration:
          type: string
          description: Total duration
        packages:
          type: array
          items:
            $ref: '#/components/schemas/PackageTestResult'
        coverage:
          type: number
          format: float
          description: Overall coverage percentage

    PackageTestResult:
      type: object
      properties:
        package:
          type: string
        tests:
          type: array
          items:
            $ref: '#/components/schemas/TestResult'
        coverage:
          type: number
          format: float
        duration:
          type: string

    TestResult:
      type: object
      properties:
        name:
          type: string
        status:
          type: string
          enum: [passed, failed, skipped, panicked]
        duration:
          type: string
        output:
          type: string
        error:
          type: string
          nullable: true

    CoverageReport:
      type: object
      properties:
        totalCoverage:
          type: number
          format: float
        packages:
          type: array
          items:
            $ref: '#/components/schemas/PackageCoverage'
        uncoveredLines:
          type: integer
        totalLines:
          type: integer

    PackageCoverage:
      type: object
      properties:
        package:
          type: string
        coverage:
          type: number
          format: float
        files:
          type: array
          items:
            $ref: '#/components/schemas/FileCoverage'

    FileCoverage:
      type: object
      properties:
        file:
          type: string
        coverage:
          type: number
          format: float
        coveredLines:
          type: integer
        totalLines:
          type: integer
        missingLines:
          type: array
          items:
            type: object
            properties:
              start:
                type: integer
              end:
                type: integer

    GeneratedTests:
      type: object
      properties:
        file:
          type: string
          description: Generated test file path
        testsCreated:
          type: integer
        coverage:
          type: number
          format: float
          description: Expected coverage after tests
        tests:
          type: array
          items:
            type: string
            description: Test function names