# Repository Services Contract
# OpenAPI 3.0 specification for gRPC repository services
openapi: 3.0.3
info:
  title: ETC Meisai Repository Services
  version: 1.0.0
  description: gRPC repository service contracts for ETC Meisai system

paths:
  # ETCMappingRepository Service
  /v1/repository/mapping/create:
    post:
      summary: Create ETC mapping
      operationId: CreateMapping
      tags:
        - ETCMappingRepository
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMappingRepoRequest'
      responses:
        '200':
          description: Mapping created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMappingRepoResponse'

  /v1/repository/mapping/{id}:
    get:
      summary: Get mapping by ID
      operationId: GetMappingByID
      tags:
        - ETCMappingRepository
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Mapping found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ETCMappingEntity'

  /v1/repository/mapping/list:
    post:
      summary: List mappings with filters
      operationId: ListMappings
      tags:
        - ETCMappingRepository
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListMappingsRepoRequest'
      responses:
        '200':
          description: List of mappings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMappingsRepoResponse'

  # ETCMeisaiRecordRepository Service
  /v1/repository/record/create:
    post:
      summary: Create ETC meisai record
      operationId: CreateRecord
      tags:
        - ETCMeisaiRecordRepository
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRecordRepoRequest'
      responses:
        '200':
          description: Record created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRecordRepoResponse'

  /v1/repository/record/{id}:
    get:
      summary: Get record by ID
      operationId: GetRecordByID
      tags:
        - ETCMeisaiRecordRepository
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Record found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ETCMeisaiRecordEntity'

  /v1/repository/record/bulk:
    post:
      summary: Bulk create records
      operationId: BulkCreateRecords
      tags:
        - ETCMeisaiRecordRepository
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkCreateRecordsRequest'
      responses:
        '200':
          description: Bulk creation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkCreateResponse'

  # ImportRepository Service
  /v1/repository/import/session:
    post:
      summary: Create import session
      operationId: CreateSession
      tags:
        - ImportRepository
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSessionRequest'
      responses:
        '200':
          description: Session created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportSessionEntity'

  /v1/repository/import/session/{id}:
    get:
      summary: Get import session
      operationId: GetSession
      tags:
        - ImportRepository
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Session found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportSessionEntity'

  # StatisticsRepository Service
  /v1/repository/statistics/total:
    post:
      summary: Get total records count
      operationId: GetTotalRecords
      tags:
        - StatisticsRepository
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetStatsRequest'
      responses:
        '200':
          description: Count result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountResponse'

  /v1/repository/statistics/daily:
    post:
      summary: Get daily statistics
      operationId: GetDailyStatistics
      tags:
        - StatisticsRepository
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetStatsRequest'
      responses:
        '200':
          description: Daily statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyStatsResponse'

components:
  schemas:
    # Entity Definitions
    ETCMappingEntity:
      type: object
      required:
        - id
        - etc_record_id
        - mapping_type
        - mapped_entity_id
        - mapped_entity_type
        - confidence
        - status
        - created_at
        - updated_at
      properties:
        id:
          type: integer
          format: int64
        etc_record_id:
          type: integer
          format: int64
        mapping_type:
          type: string
        mapped_entity_id:
          type: integer
          format: int64
        mapped_entity_type:
          type: string
        confidence:
          type: number
          format: float
          minimum: 0.0
          maximum: 1.0
        status:
          $ref: '#/components/schemas/MappingStatusEnum'
        metadata:
          type: object
        created_by:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    ETCMeisaiRecordEntity:
      type: object
      required:
        - id
        - hash
        - date
        - time
        - entrance_ic
        - exit_ic
        - toll_amount
        - car_number
        - etc_card_number
        - created_at
        - updated_at
      properties:
        id:
          type: integer
          format: int64
        hash:
          type: string
        date:
          type: string
          format: date
        time:
          type: string
          pattern: '^([01]?[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$'
        entrance_ic:
          type: string
        exit_ic:
          type: string
        toll_amount:
          type: integer
          minimum: 0
        car_number:
          type: string
        etc_card_number:
          type: string
        etc_num:
          type: string
          nullable: true
        dtako_row_id:
          type: integer
          format: int64
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    ImportSessionEntity:
      type: object
      required:
        - id
        - account_type
        - account_id
        - file_name
        - file_size
        - status
        - total_rows
        - processed_rows
        - success_rows
        - error_rows
        - duplicate_rows
        - started_at
        - created_by
        - created_at
      properties:
        id:
          type: string
          format: uuid
        account_type:
          type: string
          enum: [corporate, personal]
        account_id:
          type: string
        file_name:
          type: string
        file_size:
          type: integer
          format: int64
        status:
          $ref: '#/components/schemas/ImportStatusEnum'
        total_rows:
          type: integer
        processed_rows:
          type: integer
        success_rows:
          type: integer
        error_rows:
          type: integer
        duplicate_rows:
          type: integer
        started_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
          nullable: true
        created_by:
          type: string
        created_at:
          type: string
          format: date-time

    ImportErrorEntity:
      type: object
      required:
        - id
        - session_id
        - row_number
        - error_type
        - error_message
        - raw_data
        - created_at
      properties:
        id:
          type: integer
          format: int64
        session_id:
          type: string
          format: uuid
        row_number:
          type: integer
        error_type:
          type: string
        error_message:
          type: string
        raw_data:
          type: string
        created_at:
          type: string
          format: date-time

    # Enum Definitions
    MappingStatusEnum:
      type: string
      enum:
        - MAPPING_STATUS_ENUM_UNSPECIFIED
        - MAPPING_STATUS_ENUM_ACTIVE
        - MAPPING_STATUS_ENUM_INACTIVE
        - MAPPING_STATUS_ENUM_PENDING
        - MAPPING_STATUS_ENUM_REJECTED

    ImportStatusEnum:
      type: string
      enum:
        - IMPORT_STATUS_ENUM_UNSPECIFIED
        - IMPORT_STATUS_ENUM_PENDING
        - IMPORT_STATUS_ENUM_PROCESSING
        - IMPORT_STATUS_ENUM_COMPLETED
        - IMPORT_STATUS_ENUM_FAILED
        - IMPORT_STATUS_ENUM_CANCELLED

    SortOrderEnum:
      type: string
      enum:
        - SORT_ORDER_ENUM_UNSPECIFIED
        - SORT_ORDER_ENUM_ASC
        - SORT_ORDER_ENUM_DESC

    # Request/Response Messages
    CreateMappingRepoRequest:
      type: object
      required:
        - mapping
      properties:
        mapping:
          $ref: '#/components/schemas/ETCMappingEntity'

    CreateMappingRepoResponse:
      type: object
      required:
        - mapping
      properties:
        mapping:
          $ref: '#/components/schemas/ETCMappingEntity'

    ListMappingsRepoRequest:
      type: object
      properties:
        page:
          type: integer
          default: 1
        page_size:
          type: integer
          default: 20
        date_from:
          type: string
          format: date-time
        date_to:
          type: string
          format: date-time
        mapping_type:
          type: string
        status:
          $ref: '#/components/schemas/MappingStatusEnum'
        min_confidence:
          type: number
          format: float
        mapped_entity_type:
          type: string
        sort_by:
          type: string
        sort_order:
          $ref: '#/components/schemas/SortOrderEnum'

    ListMappingsRepoResponse:
      type: object
      required:
        - mappings
        - total_count
      properties:
        mappings:
          type: array
          items:
            $ref: '#/components/schemas/ETCMappingEntity'
        total_count:
          type: integer
          format: int64

    CreateRecordRepoRequest:
      type: object
      required:
        - record
      properties:
        record:
          $ref: '#/components/schemas/ETCMeisaiRecordEntity'

    CreateRecordRepoResponse:
      type: object
      required:
        - record
      properties:
        record:
          $ref: '#/components/schemas/ETCMeisaiRecordEntity'

    BulkCreateRecordsRequest:
      type: object
      required:
        - records
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/ETCMeisaiRecordEntity'

    BulkCreateResponse:
      type: object
      required:
        - created_count
      properties:
        created_count:
          type: integer
        errors:
          type: array
          items:
            type: string

    CreateSessionRequest:
      type: object
      required:
        - session
      properties:
        session:
          $ref: '#/components/schemas/ImportSessionEntity'

    GetStatsRequest:
      type: object
      properties:
        date_from:
          type: string
          format: date
        date_to:
          type: string
          format: date
        car_number:
          type: string
        etc_card_number:
          type: string

    CountResponse:
      type: object
      required:
        - count
      properties:
        count:
          type: integer
          format: int64

    DailyStatEntity:
      type: object
      required:
        - date
        - record_count
        - total_amount
      properties:
        date:
          type: string
          format: date
        record_count:
          type: integer
        total_amount:
          type: integer
          format: int64

    DailyStatsResponse:
      type: object
      required:
        - stats
      properties:
        stats:
          type: array
          items:
            $ref: '#/components/schemas/DailyStatEntity'