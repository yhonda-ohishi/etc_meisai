openapi: 3.0.0
info:
  title: ETC Meisai API
  description: ETC利用明細の自動取得と管理API
  version: 0.0.1
  contact:
    name: API Support
    email: support@example.com

servers:
  - url: http://localhost:8080
    description: Development server
  - url: https://api.example.com
    description: Production server

paths:
  /health:
    get:
      summary: ヘルスチェック
      description: APIサーバーの稼働状態を確認
      tags:
        - System
      responses:
        '200':
          description: サーバー正常稼働中
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"
                  timestamp:
                    type: string
                    format: date-time

  /api/etc/accounts:
    get:
      summary: 利用可能なアカウント一覧取得
      description: |
        環境変数 `ETC_CORP_ACCOUNTS` に設定されているアカウント名の一覧を取得します。
        セキュリティのため、パスワードは表示されません。

        このエンドポイントは、APIを使用する前に利用可能なアカウントを確認するために使用できます。
      tags:
        - System
      responses:
        '200':
          description: アカウント一覧取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  configured:
                    type: boolean
                    description: アカウントが設定されているか
                    example: true
                  accounts:
                    type: array
                    description: 利用可能なアカウントID一覧
                    items:
                      type: string
                    example: ["ohishiexp", "ohishiexp1"]
                  count:
                    type: integer
                    description: アカウント数
                    example: 2
                  message:
                    type: string
                    description: ステータスメッセージ
                    example: "環境変数 ETC_CORP_ACCOUNTS から読み込み"
              examples:
                with_accounts:
                  summary: アカウントが設定されている場合
                  value:
                    configured: true
                    accounts: ["ohishiexp", "ohishiexp1", "ohishiexp2"]
                    count: 3
                    message: "環境変数 ETC_CORP_ACCOUNTS から読み込み"
                without_accounts:
                  summary: アカウントが未設定の場合
                  value:
                    configured: false
                    accounts: []
                    count: 0
                    message: "環境変数 ETC_CORP_ACCOUNTS が設定されていません"

  /api/etc/download:
    post:
      summary: ETC明細ダウンロード（複数アカウント対応）
      description: |
        指定した期間のETC明細を複数アカウントから一括ダウンロード。

        ## アカウント設定方法

        ### 1. リクエストボディで指定する場合
        ```json
        {
          "accounts": [
            {"user_id": "ohishiexp", "password": "pass1"},
            {"user_id": "ohishiexp1", "password": "pass2"}
          ],
          "from_date": "2025-08-01",
          "to_date": "2025-09-15"
        }
        ```

        ### 2. 環境変数を使用する場合
        accountsパラメータを省略すると、環境変数 `ETC_CORP_ACCOUNTS` から自動的に読み込まれます。
        ```
        ETC_CORP_ACCOUNTS=ohishiexp:pass1,ohishiexp1:pass2
        ```

        **利用可能なアカウントを確認するには:**
        ```
        GET /api/etc/accounts
        ```

        ### 3. カスタム設定を使用する場合
        configパラメータで、ダウンロード処理の詳細な設定が可能です。
      tags:
        - Download
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadRequest'
            examples:
              with_accounts:
                summary: アカウント指定あり
                value:
                  accounts:
                    - user_id: "ohishiexp"
                      password: "password123"
                    - user_id: "ohishiexp1"
                      password: "password456"
                  from_date: "2025-08-01"
                  to_date: "2025-09-15"
              without_accounts:
                summary: 環境変数使用（accountsパラメータ省略）
                value:
                  from_date: "2025-08-01"
                  to_date: "2025-09-15"
              with_config:
                summary: カスタム設定付き
                value:
                  from_date: "2025-08-01"
                  to_date: "2025-09-15"
                  config:
                    download_path: "./custom_downloads"
                    headless: false
                    timeout: 60000
                    retry_count: 5
      responses:
        '200':
          description: ダウンロード成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadResponse'
              example:
                results:
                  - user_id: "ohishiexp"
                    success: true
                    csv_path: "./downloads/ETC_20250815_ohishiexp.csv"
                    record_count: 125
                  - user_id: "ohishiexp1"
                    success: true
                    csv_path: "./downloads/ETC_20250815_ohishiexp1.csv"
                    record_count: 87
                total_records: 212
                success_count: 2
                failed_count: 0
        '400':
          description: リクエストエラー
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Invalid from_date format"
        '401':
          description: 認証エラー
        '500':
          description: サーバーエラー

  /api/etc/download-single:
    post:
      summary: 単一アカウントETC明細ダウンロード
      description: |
        単一アカウントの明細をダウンロード。

        ## アカウント設定方法

        リクエストボディで直接アカウント情報を指定します。
        このエンドポイントは環境変数を使用せず、必ずリクエストボディでアカウント情報を指定する必要があります。

        ### 使用例
        ```json
        {
          "user_id": "ohishiexp",
          "password": "password123",
          "from_date": "2025-08-01",
          "to_date": "2025-09-15"
        }
        ```

        ### 注意事項
        - `user_id` と `password` は必須パラメータです
        - このエンドポイントは単一アカウントのみを処理します
        - 複数アカウントを処理する場合は `/api/etc/download` を使用してください
      tags:
        - Download
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SingleDownloadRequest'
            examples:
              ohishiexp_account:
                summary: ohishiexp アカウントの例
                value:
                  user_id: "ohishiexp"
                  password: "password123"
                  from_date: "2025-08-01"
                  to_date: "2025-09-15"
              ohishiexp1_account:
                summary: ohishiexp1 アカウントの例
                value:
                  user_id: "ohishiexp1"
                  password: "password456"
                  from_date: "2025-08-01"
                  to_date: "2025-09-15"
      responses:
        '200':
          description: ダウンロード成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadResult'
              example:
                user_id: "ohishiexp"
                success: true
                csv_path: "./downloads/ETC_20250815_ohishiexp.csv"
                record_count: 125
                records:
                  - usage_date: "2025-08-15"
                    usage_time: "14:30"
                    entrance_ic: "東京"
                    exit_ic: "横浜"
                    amount: 1200
        '400':
          description: リクエストエラー
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                missing_user_id:
                  value:
                    error: "user_id is required"
                invalid_date:
                  value:
                    error: "Invalid from_date format"
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Login failed: Invalid credentials"
        '500':
          description: サーバーエラー

  /api/etc/parse-csv:
    post:
      summary: CSVファイルパース
      description: アップロードされたCSVファイルをパース
      tags:
        - Parse
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: CSVファイル
      responses:
        '200':
          description: パース成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  records:
                    type: array
                    items:
                      $ref: '#/components/schemas/ETCMeisai'
                  count:
                    type: integer

  /api/etc/import:
    post:
      summary: データインポート
      description: ETC明細データをデータベースにインポート
      tags:
        - Import
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                records:
                  type: array
                  items:
                    $ref: '#/components/schemas/ETCMeisai'
      responses:
        '200':
          description: インポート成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  imported:
                    type: integer
                    description: インポート件数
                  skipped:
                    type: integer
                    description: スキップ件数

  /api/etc/meisai:
    get:
      summary: 明細一覧取得
      description: 条件を指定してETC明細を取得
      tags:
        - Meisai
      parameters:
        - name: from_date
          in: query
          description: 開始日 (YYYY-MM-DD)
          schema:
            type: string
            format: date
        - name: to_date
          in: query
          description: 終了日 (YYYY-MM-DD)
          schema:
            type: string
            format: date
        - name: unko_no
          in: query
          description: 運行番号
          schema:
            type: string
        - name: card_no
          in: query
          description: カード番号
          schema:
            type: string
        - name: limit
          in: query
          description: 取得件数上限
          schema:
            type: integer
            default: 100
        - name: offset
          in: query
          description: オフセット
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: 取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  records:
                    type: array
                    items:
                      $ref: '#/components/schemas/ETCMeisai'
                  total:
                    type: integer
                    description: 総件数
                  limit:
                    type: integer
                  offset:
                    type: integer

    post:
      summary: 明細作成
      description: 新規ETC明細を作成
      tags:
        - Meisai
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ETCMeisai'
      responses:
        '201':
          description: 作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ETCMeisai'

  /api/etc/meisai/{id}:
    get:
      summary: 明細詳細取得
      description: IDを指定してETC明細を取得
      tags:
        - Meisai
      parameters:
        - name: id
          in: path
          required: true
          description: 明細ID
          schema:
            type: integer
      responses:
        '200':
          description: 取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ETCMeisai'
        '404':
          description: 明細が見つからない

  /api/etc/summary:
    get:
      summary: サマリー取得
      description: 指定期間のETC利用サマリーを取得
      tags:
        - Summary
      parameters:
        - name: from_date
          in: query
          required: true
          description: 開始日 (YYYY-MM-DD)
          schema:
            type: string
            format: date
        - name: to_date
          in: query
          required: true
          description: 終了日 (YYYY-MM-DD)
          schema:
            type: string
            format: date
        - name: group_by
          in: query
          description: グループ化項目
          schema:
            type: string
            enum: [day, month, card, vehicle]
      responses:
        '200':
          description: 取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummaryResponse'

components:
  schemas:
    ETCMeisai:
      type: object
      properties:
        id:
          type: integer
          description: 明細ID
        usage_date:
          type: string
          description: 利用年月日
          example: "2025-09-15"
        usage_time:
          type: string
          description: 利用時刻
          example: "14:30"
        entrance_ic:
          type: string
          description: IC入口
          example: "東京"
        exit_ic:
          type: string
          description: IC出口
          example: "横浜"
        vehicle_number:
          type: string
          description: 車両番号
          example: "品川500あ1234"
        card_number:
          type: string
          description: ETCカード番号
          example: "****1234"
        amount:
          type: integer
          description: 通行料金
          example: 1200
        discount_amount:
          type: integer
          description: 割引額
          example: 300
        total_amount:
          type: integer
          description: 請求額
          example: 900
        distance:
          type: number
          format: float
          description: 走行距離(km)
          example: 35.2
        unko_no:
          type: string
          description: 運行番号
          example: "UN20250915001"
        note:
          type: string
          description: 備考
        created_at:
          type: string
          format: date-time
          description: 作成日時

    DownloadRequest:
      type: object
      required:
        - from_date
        - to_date
      properties:
        accounts:
          type: array
          description: |
            アカウント情報の配列。
            省略した場合は環境変数 `ETC_CORP_ACCOUNTS` から自動的に読み込まれます。

            環境変数の形式: `ohishiexp:pass1,ohishiexp1:pass2`
          items:
            type: object
            required:
              - user_id
              - password
            properties:
              user_id:
                type: string
                description: ETCサイトのユーザーID
                example: "ohishiexp"
              password:
                type: string
                description: ETCサイトのパスワード
                example: "password123"
        from_date:
          type: string
          format: date
          description: 明細取得開始日（YYYY-MM-DD形式）
          example: "2025-08-01"
        to_date:
          type: string
          format: date
          description: 明細取得終了日（YYYY-MM-DD形式）
          example: "2025-09-15"
        config:
          type: object
          description: スクレイピング処理の詳細設定（省略可能）
          properties:
            download_path:
              type: string
              description: CSVファイルのダウンロード先ディレクトリ
              default: "./downloads"
              example: "./custom_downloads"
            headless:
              type: boolean
              description: ブラウザを非表示モードで実行するか
              default: true
            timeout:
              type: integer
              description: タイムアウト時間（ミリ秒）
              default: 30000
              example: 60000
            retry_count:
              type: integer
              description: エラー時のリトライ回数
              default: 3
              example: 5

    SingleDownloadRequest:
      type: object
      required:
        - user_id
        - password
        - from_date
        - to_date
      properties:
        user_id:
          type: string
          description: |
            ETCサイトのユーザーID。
            異なるアカウントタイプ（ohishiexp, ohishiexp1）で
            ページ構造が異なるため、正しいユーザーIDを指定してください。
        password:
          type: string
          description: パスワード
        from_date:
          type: string
          format: date
        to_date:
          type: string
          format: date

    DownloadResult:
      type: object
      properties:
        account:
          type: string
          description: アカウント名
        csv_path:
          type: string
          description: ダウンロードしたCSVファイルのパス
        records:
          type: array
          items:
            $ref: '#/components/schemas/ETCMeisai'
        success:
          type: boolean
          description: 処理成功フラグ
        error:
          type: string
          description: エラーメッセージ（失敗時）
        record_count:
          type: integer
          description: レコード数

    DownloadResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/DownloadResult'
        total_records:
          type: integer
          description: 総レコード数
        success_count:
          type: integer
          description: 成功アカウント数
        failed_count:
          type: integer
          description: 失敗アカウント数

    SummaryResponse:
      type: object
      properties:
        period:
          type: object
          properties:
            from:
              type: string
              format: date
            to:
              type: string
              format: date
        total_amount:
          type: integer
          description: 総額
        total_discount:
          type: integer
          description: 総割引額
        total_distance:
          type: number
          format: float
          description: 総走行距離
        record_count:
          type: integer
          description: レコード件数
        daily_summary:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                format: date
              amount:
                type: integer
              count:
                type: integer
        card_summary:
          type: array
          items:
            type: object
            properties:
              card_number:
                type: string
              amount:
                type: integer
              count:
                type: integer

tags:
  - name: System
    description: システム関連エンドポイント
  - name: Download
    description: ETC明細ダウンロード機能
  - name: Parse
    description: CSVパース機能
  - name: Import
    description: データインポート機能
  - name: Meisai
    description: 明細管理機能
  - name: Summary
    description: サマリー機能